plugins {
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
}

group = 'com.rentitfurnished'
version = '1.0.0'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'mysql:mysql-connector-java:8.0.17'
    implementation 'org.flywaydb:flyway-core:5.2.4'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.jmockit:jmockit:1.47'
    testImplementation 'junit:junit:4.12'
}

bootJar {
    archiveBaseName.set("mutant-detector")
    archiveVersion.set("latest")
}

test {
    jvmArgs += ["-javaagent:${classpath.find { it.name.contains("jmockit") }.absolutePath}"]
    systemProperties System.properties
}

jacoco {
    toolVersion = "0.8.3"
}

jacocoTestReport {
    dependsOn test

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "com/rentitfurnished/mutantdetector/domain/**",
                    "com/rentitfurnished/mutantdetector/MutantDetectorApplication*"
            ])
        }))
    }
}
